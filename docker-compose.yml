version: '2'

services:
  # this is our kafka cluster.
  kafka-cluster:
    image: landoop/fast-data-dev:latest
    environment:
      ADV_HOST: 127.0.0.1         # Change to 192.168.99.100 if using Docker Toolbox
      RUNTESTS: 0                 # Disable Running tests so the cluster starts faster
    ports:
      - 2181:2181                 # Zookeeper
      - 3030:3030                 # Landoop UI
      - 8081-8083:8081-8083       # REST Proxy, Schema Registry, Kafka Connect ports
      - 9581-9585:9581-9585       # JMX Ports
      - 9092:9092                 # Kafka Broker

  # we will use elasticsearch as one of our sinks.
  # This configuration allows you to start elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    container_name: elasticsearch
    environment:
        - discovery.type=single-node
        - http.port=9200
        - http.cors.enabled=true
        - http.cors.allow-origin=http://localhost:1358,http://127.0.0.1:1358,http://localhost:5601,http://127.0.0.1:5601
        - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
        - http.cors.allow-credentials=true
        - bootstrap.memory_lock=true
        - 'ES_JAVA_OPTS=-Xms1g -Xmx1g'
    ports:
        - '9200:9200'
        - '9300:9300'
    ulimits:
        memlock:
            soft: -1
            hard: -1
    
  # elasticsearch browsers

  dejavu:
    image: appbaseio/dejavu:3.4.7
    container_name: dejavu
    ports:
        - '1358:1358'
    links:
        - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:7.10.2
    container_name: kibana7
    environment:
        - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
        - "5601:5601"
    depends_on:
        - elasticsearch